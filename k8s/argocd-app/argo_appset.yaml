apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: myapps
  namespace: argocd
spec:
  generators:
    - scmProvider:
        github:
          # The GitHub organization to scan.
          organization: RobinNagpal
          allBranches: true
        filters:
          # Include any repository starting with "myapp" AND including a Kustomize config AND labeled with "deploy-ok" ...
          - repositoryMatch: ^argo-learning-main-v2
            pathsExist: [ k8s ]
            labelMatch: deploy-ok
  template:
    metadata:
      name: '{{ repository }} - {{ branch }}'
    spec:
      source:
        repoURL: '{{ url }}'
        targetRevision: '{{ branch }}'
        path: k8s/bar-app
      project: argo-learning-project
      destination:
        server: https://kubernetes.default.svc
        namespace: '{{ branch }}'
      syncPolicy:
        automated: # automated sync by default retries failed attempts 5 times with following delays between attempts ( 5s, 10s, 20s, 40s, 80s ); retry controlled using `retry` field.
          prune: true # Specifies if resources should be pruned during auto-syncing ( false by default ).
          selfHeal: true # Specifies if partial app sync should be executed when resources are changed only in target Kubernetes cluster and no git change detected ( false by default ).
        #      allowEmpty: false # Allows deleting all application resources during automatic syncing ( false by default ).
        syncOptions: # Sync options which modifies sync behavior
          - Validate=false # disables resource validation (equivalent to 'kubectl apply --validate=false') ( true by default ).
          - CreateNamespace=true # Namespace Auto-Creation ensures that namespace specified as the application destination exists in the destination cluster.
          - PrunePropagationPolicy=foreground # Supported policies are background, foreground and orphan.
          - PruneLast=true # Allow the ability for resource pruning to happen as a final, implicit wave of a sync operation
        # The retry feature is available since v1.7
        retry:
          limit: 5 # number of failed sync attempt retries; unlimited number of attempts if less than 0
          backoff:
            duration: 5s # the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
            factor: 2 # a factor to multiply the base duration after each failed retry
            maxDuration: 3m # the maximum amount of time allowed for the backoff strategy
